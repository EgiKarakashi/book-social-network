name: BSN Backend API Pipeline

on:
  push:
    branches:
      - master

env:
  PROJECT_ID: ${{secrets.GKE_PROJECT}}
  GKE_CLUSTER: book-social-network
  GKE_ZONE: europe-west3
  DEPLOYMENT_NAME: book-social-network
  IMAGE: book-social-network-image
  TAG: 1.0.0

jobs:
  setup-build-publish-deploy:
    name: Setup Build Publish Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
          server-id: github
          settings-path: ${{github.workspace}}

      - name: Build with Maven
        run: |
          cd book-network
          mvn clean package -DskipTests

      - name: Setup Google Cloud CLI
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@0.1.3
        env: 
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        with:
          service_account_key: ${{secrets.GKE_SA_KEY}}
          project_id: ${{secrets.GKE_PROJECT}}

      - name: Install gke-gcloud-auth-plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin


      - name: Configure Docker
        run: |
          gcloud --quiet auth configure-docker

      - name: Get GKE Credentials
        run: |
          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

      - name: Build Docker Image
        run: |
          docker build -t "gcr.io/$PROJECT_ID/$IMAGE:$TAG" .

      - name: Publish Docker Image to GCR
        run: |
          docker push "gcr.io/$PROJECT_ID/$IMAGE:$TAG"

      - name: Setup Kustomize
        run: |
            curl -sfLo kustomize.tar.gz https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv5.4.2/kustomize_v5.4.2_linux_amd64.tar.gz
            tar -xzf kustomize.tar.gz
            chmod u+x ./kustomize

      - name: Deploy Image to GKE cluster
        run: |
            ./kustomize edit set image gcr.io/$PROJECT_ID/$IMAGE:$TAG=gcr.io/$PROJECT_ID/$IMAGE:$TAG
            ./kustomize build . | kubectl apply -f -
            kubectl rollout status deployment/$DEPLOYMENT_NAME
            kubectl get services -o wide